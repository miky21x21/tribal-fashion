// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String?  @unique
  password     String?
  firstName    String?
  lastName     String?
  avatar       String?
  role         Role     @default(CUSTOMER)
  
  // OAuth provider fields
  googleId     String?  @unique
  appleId      String?  @unique
  phoneNumber  String?  @unique
  
  // Profile completion status
  profileComplete Boolean @default(false)
  
  orders       Order[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@index([email])
  @@index([googleId])
  @@index([appleId])
  @@index([phoneNumber])
}

enum Role {
  CUSTOMER
  ADMIN
}

enum AuthProvider {
  GOOGLE
  APPLE
  PHONE
  EMAIL
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  image       String
  category    String
  featured    Boolean  @default(false)
  inventory   Int      @default(0)
  orders      OrderItem[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  total     Float
  status    OrderStatus @default(PENDING)
  
  // Shipping Information
  shippingName        String
  shippingPhone       String
  shippingAddress     String
  shippingCity        String
  shippingState       String
  shippingZipCode     String
  shippingCountry     String @default("India")
  
  // Payment Information
  paymentMethod       String @default("COD")
  paymentId           String?
  paymentOrderId      String?
  paymentStatus       String @default("PENDING")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model HeroContent {
  id      String   @id @default(cuid())
  content String
  image   String
  updatedAt DateTime @updatedAt
}

model PhoneOTP {
  id          String   @id @default(cuid())
  phoneNumber String
  otpCode     String
  expiresAt   DateTime
  isUsed      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([phoneNumber])
  @@index([expiresAt])
}